plugins {
    id 'java-library'
    id "io.qameta.allure" version "2.9.6"
}

repositories {
    mavenCentral()
}

compileJava {
    options.encoding = 'UTF-8'
}
compileTestJava {
    options.encoding = 'UTF-8'
}

def allureVersion = "2.17.3",
    selenideVersion = "6.5.2",
    junitVersion = "5.8.2",
    slf4jVersion = "1.7.36",
    javafakerVersion = "1.0.2",
    assertjVersion = "3.22.0",
    ownerVersion = "1.0.12",
    lombokVersion = "1.18.24"

dependencies {
    testImplementation(
            "org.junit.jupiter:junit-jupiter:$junitVersion",
            "com.codeborne:selenide:$selenideVersion",
            "com.github.javafaker:javafaker:$javafakerVersion",
            "org.assertj:assertj-core:$assertjVersion",
            "org.slf4j:slf4j-simple:$slf4jVersion",
            "io.qameta.allure:allure-selenide:$allureVersion",
            "org.aeonbits.owner:owner:$ownerVersion",

            testCompileOnly("org.projectlombok:lombok:$lombokVersion"),
            testAnnotationProcessor("org.projectlombok:lombok:$lombokVersion")
    )
}

allure {
    report {
        version.set("2.17.3") //версия Allure Report (https://github.com/allure-framework/allure2)
    }
    adapter {
        aspectjWeaver.set(true) // обработка аннотации @Step
        frameworks {
            junit5 {
                adapterVersion.set("2.17.3") //версия Allure JUnit5 (https://github.com/allure-framework/allure-java)
            }
        }
    }
}

tasks.withType(Test) {
    systemProperties(System.getProperties())

    useJUnitPlatform() {
        if (System.getProperty("testTag").equals("Search")) {
            includeTags "Search"
        } else if (System.getProperty("testTag").equals("Open")) {
            includeTags "Open"
        } else if (System.getProperty("testTag").equals("ShortVideos")) {
            includeTags "ShortVideos"
        } else if (System.getProperty("testTag").equals("HeaderTabs")) {
            includeTags "HeaderTabs"
        }
    }
}